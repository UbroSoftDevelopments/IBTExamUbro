
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Screen</title>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
</head>
<body>
    <div id="element-to-record" style="width:400px;height:400px;">
        <input type="text" id='' value="">
        <input type="text" id='' value="">
        <input type="text" id='' value="">

    </div>
    <canvas id="background-canvas" style="position:absolute; top:-99999999px; left:-9999999999px;"></canvas>
    
    <script src="~/Scripts/RecordRTC.js"></script>
    <script src="https://www.webrtc-experiment.com/html2canvas.min.js"></script>

    <script defer>
        const enrollmentd = 'ok';
        var elementToRecord = document.getElementById('element-to-record');
        var canvas2d = document.getElementById('background-canvas');
        var context = canvas2d.getContext('2d');

        canvas2d.width = elementToRecord.clientWidth;
        canvas2d.height = elementToRecord.clientHeight;

        var isRecordingStarted = false;
        var isStoppedRecording = false;

        var screenmilliSecond = 14 * 1000;
        (function looper() {
            if (!isRecordingStarted) {
                return setTimeout(looper, 500);
            }
            html2canvas(elementToRecord).then(function (canvas) {
                context.clearRect(0, 0, canvas2d.width, canvas2d.height);
                context.drawImage(canvas, 0, 0, canvas2d.width, canvas2d.height);
                if (isStoppedRecording) {
                    return;
                }
                requestAnimationFrame(looper);
            });
        })();


        //


        //startScreen()

        // var ssrecorder;

        function startScreen() {
            myfunction();
            let ssrecorder = RecordRTC(canvas2d, {
                type: 'canvas'
            });


            isStoppedRecording = false;
            isRecordingStarted = true;
            ssrecorder.startRecording();
            setTimeout(function () {
                console.log('trying stop record to get blob');
                stopScreen(ssrecorder);
            }, screenmilliSecond);
        };

        //setInterval(startScreen, 12000);
        //setInterval(stopScreen, screenmilliSecond);

        function stopScreen(ssrecorder) {

            ssrecorder.stopRecording(function () {
                isRecordingStarted = false;
                isStoppedRecording = true;

                let blobs = ssrecorder.getBlob();
                console.log("ssrecorder", ssrecorder)
                var fileNames = getFileNames('webm');
                //     var fileObjects = new File([blobs], fileNames, {
                //     type: 'video/webm'
                // });
                console.log("blob", blobs);

                var formDatas = new FormData();
                // hogya check krl
                formDatas.append('enroll-blob', enrollmentd);

                // recorded data
                formDatas.append('video-blob', blobs);

                // file name
                formDatas.append('video-filename', fileNames);

                $.ajax({
                    url: 'https://localhost:44371/api/FileAPI/UploadFiles', // replace with your own server URL
                    data: formDatas,
                    cache: false,
                    contentType: false,
                    processData: false,
                    type: 'POST',
                    success: function (response) {
                        console.log("Awesome upload response", response);

                        console.log(ssrecorder);
                        alert('State of recordrder' + ssrecorder);
                        //startScreen();
                    }
                });

            });
        };

        var counters = 0;
        // this function is used to generate random file name
        function getFileNames(fileExtensions) {
            counters++;
            return "Screen" + enrollmentd + '-' + counters + '-' + fileExtensions;

        }


       
    </script>
   
</body>

</html>
